<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clock.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.clock.bean.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="uavg" jdbcType="VARCHAR" property="uavg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role, username, password, account, sex, type_id, group_id, state, createtime, 
    uavg
  </sql>
  <select id="selectByExample" parameterType="com.clock.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    *
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap">
    SELECT u.*
    from `user` u
    where id = #{id}
  </select>

  <select id="selectAllUser" resultMap="BaseResultMap">
    SELECT u.*
    from `user` u
    where state = '0'
<!--    <if test="username!=null and username!=''" >-->
<!--      and u.username LIKE CONCAT('%',#{username},'%')-->
<!--    </if>-->
<!--    <if test="account!=null and account!=''" >-->
<!--      and u.account LIKE CONCAT('%',#{account},'%')-->
<!--    </if>-->
<!--    <if test="role!=null and role!=''" >-->
<!--      and u.role LIKE CONCAT('%',#{role},'%')-->
<!--    </if>-->
  </select>

  <select id="selectForbidUser" resultMap="BaseResultMap">
    select *
    from user
    where state = '1'
  </select>

  <select id="selectById" resultMap="BaseResultMap">
    SELECT u.*, t.tname, g.gname
    from `user` u , `type` t ,`group` g
    where u.type_id = t.tid
      and u.group_id = g.gid
      and u.id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.clock.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clock.bean.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (role, username, password, 
      account, sex, type_id, 
      group_id, state, createtime, 
      uavg)
    values (#{role,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{groupId,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{uavg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clock.bean.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="role != null">
        role,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="uavg != null">
        uavg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uavg != null">
        #{uavg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clock.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <select id="selectFUserById" resultType="com.clock.bean.User">
    select * from user where id = #{id}
  </select>


  <select id="selectAUser" resultType="com.clock.bean.User">
    select *
    from user
    where state='0'
    <if test="id != null and id != ''">
        and id = #{id}
    </if>

    <if test="username != null and username != ''">
        and username = #{username}
    </if>

    <if test="account != null and account != ''">
         and account = #{account}
    </if>

  </select>


  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uavg != null">
        uavg = #{record.uavg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      role = #{record.role,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      uavg = #{record.uavg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clock.bean.User">
    update user
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uavg != null">
        uavg = #{uavg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clock.bean.User">
    update user
    set role = #{role,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      uavg = #{uavg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--  禁用user-->
    <update id="forbidUser" parameterType="com.clock.bean.User">
      update user
      set state = '1'
      where id = #{id}
    </update>

<!--恢复user-->
  <update id="recoveryUser" parameterType="com.clock.bean.User">
    update user
    set state = '0'
    where id = #{id}
    </update>
  <update id="updateUserImg">
    update user
    set uavg = #{uavg,jdbcType=VARCHAR}
    where id = #{id}
  </update>
</mapper>
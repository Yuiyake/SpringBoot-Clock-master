<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clock.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.clock.bean.Reply">
    <id column="rid" jdbcType="INTEGER" property="rid" />
    <result column="did" jdbcType="INTEGER" property="did" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="rTime" jdbcType="TIMESTAMP" property="rtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.clock.bean.Reply">
    <result column="rContents" jdbcType="LONGVARCHAR" property="rcontents" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, did, uid, rTime
  </sql>
  <sql id="Blob_Column_List">
    rContents
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.clock.bean.ReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.clock.bean.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.clock.bean.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clock.bean.Reply">
    <selectKey keyProperty="rid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply (did, uid, rTime, 
      rContents)
    values (#{did,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{rtime,jdbcType=TIMESTAMP}, 
      #{rcontents,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clock.bean.Reply">
    <selectKey keyProperty="rid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="did != null">
        did,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="rtime != null">
        rTime,
      </if>
      <if test="rcontents != null">
        rContents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="rtime != null">
        #{rtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rcontents != null">
        #{rcontents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clock.bean.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.did != null">
        did = #{record.did,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.rtime != null">
        rTime = #{record.rtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rcontents != null">
        rContents = #{record.rcontents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reply
    set rid = #{record.rid,jdbcType=INTEGER},
      did = #{record.did,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      rTime = #{record.rtime,jdbcType=TIMESTAMP},
      rContents = #{record.rcontents,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set rid = #{record.rid,jdbcType=INTEGER},
      did = #{record.did,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      rTime = #{record.rtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clock.bean.Reply">
    update reply
    <set>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="rtime != null">
        rTime = #{rtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rcontents != null">
        rContents = #{rcontents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.clock.bean.Reply">
    update reply
    set did = #{did,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      rTime = #{rtime,jdbcType=TIMESTAMP},
      rContents = #{rcontents,jdbcType=LONGVARCHAR}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clock.bean.Reply">
    update reply
    set did = #{did,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      rTime = #{rtime,jdbcType=TIMESTAMP}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
</mapper>